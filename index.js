"use strict";var React=require("react");var ReactDOM=require("react-dom");var isPlainObject=require("lodash/isPlainObject");var isEqual=require("lodash/isEqual");function angularize(Component,componentName,angularApp,bindings){bindings=bindings||{};var renderInfo;var transclusion;var element;if(typeof window==="undefined"||typeof angularApp==="undefined")return;angularApp.component(componentName,{bindings:bindings,controller:["$element",function($element){var _this=this;element=$element;if(window.angular){this.$scope=window.angular.element($element).scope();var previous={};this.$onInit=function(){for(var _i=0,_Object$keys=Object.keys(bindings);_i<_Object$keys.length;_i++){var bindingKey=_Object$keys[_i];if(/^data[A-Z]/.test(bindingKey)){console.warn("'".concat(bindingKey,"' binding for ").concat(componentName," component will be undefined because AngularJS ignores attributes starting with data-"))}if(bindings[bindingKey]==="="){previous[bindingKey]=window.angular.copy(_this[bindingKey])}}};this.$doCheck=function(){for(var _i2=0,_Object$keys2=Object.keys(previous);_i2<_Object$keys2.length;_i2++){var previousKey=_Object$keys2[_i2];if(!equals(_this[previousKey],previous[previousKey])){_this.$onChanges();previous[previousKey]=window.angular.copy(_this[previousKey]);return}}}}this.$onChanges=function(){renderInfo=_this;render()}}]}).directive(componentName,function(){return{restrict:"EA",transclude:true,link:function link(scope,element,attributes,_,transclude){var children=transclude();transclusion=createReactElements(children);render();function createReactElements(elements){var reactElements=Array.from(elements).reduce(createElement,[]);if(reactElements.length===1){return reactElements[0]}if(reactElements.length===0){return undefined}return reactElements}function findReactComponent(el){var key=Object.keys(el).find(function(key){return key.startsWith("__reactInternalInstance$")});if(el[key]){var fiberNode=el[key];return fiberNode&&fiberNode["return"]}return null}function createElement(elements,element,index){if(element instanceof HTMLElement){var existing=findReactComponent(element);if(!existing){var reactElement=createHTMLElement(element,index);elements.push(reactElement)}}else if(element.nodeName==="#text"){var _reactElement=createTextElement(element);var textContent=_reactElement.replace(/âµ/,"");if(textContent){elements.push(_reactElement)}}return elements}function createHTMLElement(element,index){var tagName=element.tagName,childNodes=element.childNodes;var tagname=tagName.toLowerCase();var attributes=getAttributesMap(element);attributes.key=index;attributes.className=attributes["class"];delete attributes["class"];if(childNodes.length>0){attributes.children=createReactElements(childNodes)}return React.createElement(tagname,attributes)}function createTextElement(element){return element.data.trim()}function getAttributesMap(element){var attributes=element.attributes;var attrArray=Array.from(attributes||[]);return attrArray.reduce(function(map,attr){map[attr.name]=attr.value;return map},{})}}}});function render(){ReactDOM.render(React.createElement(Component,renderInfo,transclusion),element[0])}}function angularizeDirective(Component,directiveName,angularApp,bindings){bindings=bindings||{};if(typeof window==="undefined"||typeof angularApp==="undefined")return;angularApp.directive(directiveName,function(){return{scope:bindings,replace:true,link:function link(scope,element){scope.$scope=scope;ReactDOM.render(React.createElement(Component,scope),element[0]);var keys=[];for(var _i3=0,_Object$keys3=Object.keys(bindings);_i3<_Object$keys3.length;_i3++){var bindingKey=_Object$keys3[_i3];if(/^data[A-Z]/.test(bindingKey)){console.warn("'".concat(bindingKey,"' binding for ").concat(directiveName," directive will be undefined because AngularJS ignores attributes starting with data-"))}if(bindings[bindingKey]!=="&"){keys.push(bindingKey)}}scope.$watchGroup(keys,function(){ReactDOM.render(React.createElement(Component,scope),element[0])})}}})}function getService(serviceName){if(typeof window==="undefined"||typeof window.angular==="undefined")return{};return window.angular.element(document.body).injector().get(serviceName)}function equals(o1,o2){if(isPlainObject(o1)&&isPlainObject(o2)){return isEqual(o1,o2)}return window.angular.equals(o1,o2)}module.exports={getService:getService,angularize:angularize,angularizeDirective:angularizeDirective};